"""
Django settings for kart project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from decouple import config  #https://pypi.org/project/python-decouple/

# Borrar si no sirve
#import django.utils.translation as original_translation
#from django.utils.translation import gettext_lazy
#original_translation.ugettext_lazy = gettext_lazy
# Borrar hasta aqui.

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')  # Se cambio el texto explícito, por el dic de 'decouple' en '.env'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)  # Se cambio el texto explícito, por el dic de 'decouple' en '.env'

ALLOWED_HOSTS = ['ghetti-env.eba-xmmems2p.us-west-2.elasticbeanstalk.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mainapp',
    'category',
    'account',
    'store',
    'ecart',
    'todo',
    'order',
    'admin_honeypot',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #https://pypi.org/project/django-session-timeout/
    'django_session_timeout.middleware.SessionTimeoutMiddleware',
]

# session-timeout config
#SESSION_EXPIRE_SECONDS = 10  # 3600 = 1hr en segundos
#SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True
#SESSION_TIMEOUT_REDIRECT = 'account/login'  # no funciona, redirige a 'accounts/login

ROOT_URLCONF = 'kart.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # el resultado del método o funcion estará disponible en todas las 'templates'
                'category.context_processors.menu_cat_links',
                'category.context_processors.menu_subcat_links',
                'ecart.context_processors.counter',
            ],
        },
    },
]

WSGI_APPLICATION = 'kart.wsgi.application'

AUTH_USER_MODEL = 'account.Account'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'America/Mexico_City' #'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR /'static'
STATICFILES_DIRS = [  # Otros directorios con archivos 'static'
    'mainapp/static/',
    
]

# Configuración de los archivos de media
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR /'media'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración para manejo de ERROR en django con boostrap (DANGER)
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}

# Configurar SMTP email Server
# Configurar la cuenta de gmail: https://www.youtube.com/watch?v=OJxShAGAvLM

# Se cambio el texto explícito, por el dic de 'decouple' en '.env'
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_USE_SSL = config('EMAIL_USE_SSL', cast=bool)


SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'

# Agregar varibale de entorno a: '.env'
# Cambiar el texto explicito por el dic de 'decouple'

STATES_MX = config('STATES_MX').split(",")
#OK change your .env file to: ALLOWED_CODES=AB01,AB02
#OK then you could do: ALLOWED_CODES = os.environ.get('ALLOWED_POSTCODES').split(",")

